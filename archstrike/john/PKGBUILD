# Maintainer: ArchStrike <team@archstrike.org>

buildarch=28

pkgname=john
pkgver=1.9.0
pkgrel=1
groups=('archstrike' 'archstrike-crackers')
pkgdesc='John the Ripper password cracker'
url='https://www.openwall.com/john'
arch=('armv6h' 'armv7h' 'aarch64')
license=('GPL2' 'custom')
depends=('openssl' 'gmp' 'libpcap' 'openmpi' 'gcc-libs' 'opencl-icd-loader')
optdepends=(
  'bash-completion: completion for bash'
  'lua: lua based john scripts'
  'perl: perl based john scripts'
  'ruby: ruby based john scripts'
  'python2: python2 based john scripts'
  'python: python based john scripts')
makedepends=('pkg-config' 'opencl-headers')
backup=('etc/john/john.conf')
source=("https://download.openwall.net/pub/projects/${pkgname}/${pkgver}/${pkgname}-${pkgver}-jumbo-1.tar.gz")
sha512sums=('e07bbff15de8312b5350ce9b083bfb7bee7846c2fa2f9443aec65098c136af824ba5cff0c3dc5600e3dfb0fc81e0f282dc4bb1abf84cb021f4f55ca2b2d03054')

#prepare() {
#  cd "${pkgname}-${_johnver}-jumbo-1/src"
#  sed 's|$prefix/bin|/usr/lib/john|' -i configure.ac
#  autoreconf -fiv
#}

build() {
  cd "${pkgname}-${pkgver}-jumbo-1/src"

  ./configure
  make clean; make
}

package() {
  cd "${pkgname}-${pkgver}-jumbo-1"

  # config
  install -Dm 644 run/john.conf -t "${pkgdir}/etc/john"
  install -Dm 644 run/*.conf -t "${pkgdir}/usr/share/john"

  # opencl
  install -Dm 644 run/kernels/* -t "${pkgdir}/usr/share/john/kernels"

  # docs
  install -d "${pkgdir}/usr/share/doc/john"
  cp -r doc/* "${pkgdir}/usr/share/doc/john"
  rm "${pkgdir}/usr/share/doc/john/README"
  install -Dm 644 README.md "${pkgdir}/usr/share/doc/${pkgname}"
  install -Dm 644 doc/LICENSE -t "${pkgdir}/usr/share/licenses/${pkgname}"
  chmod -R o+r "${pkgdir}"/usr/share/doc/john/*

  # completion
  install -Dm 644 run/john.bash_completion "${pkgdir}/usr/share/bash-completion/completions/john"
  install -Dm 644 run/john.zsh_completion "${pkgdir}/usr/share/zsh/site-functions/_john"

  # scripts
  install -d "${pkgdir}/usr/bin" "${pkgdir}/usr/lib/john"
  install -Dm 755 run/{*.py,*.pl,*.rb,*.lua,*.js,mailer,benchmark-unify} -t "${pkgdir}/usr/lib/john"
  for ext in lua pl rb py; do
    for script in run/*."${ext}"; do
      ln -sf "/usr/lib/john/$(basename "${script}")" "${pkgdir}/usr/bin/$(basename "${script/.${ext}/}")"
    done
  done

  # binaries
  install -Dm 755 run/john -t "${pkgdir}/usr/bin"
  install -Dm 755 run/john-non-* -t "${pkgdir}/usr/lib/john"||true
  local john_bins=(bitlocker2john calc_stat cprepair dmg2john eapmd5tojohn genmkvpwd hccap2john \
                   keepass2john mkvcalcproba putty2john racf2john raw2dyna SIPdump uaf2john \
                   vncpcap2john wpapcap2john)
  for bin in "${john_bins[@]}"; do
    install -Dm 755 "run/${bin}" -t "${pkgdir}/usr/lib/john"
    ln -sf "/usr/lib/john/${bin}" "${pkgdir}/usr/bin/${bin}"
  done

  # symlink john
  for link in $(find run -maxdepth 1 -type l); do
    ln -s john "${pkgdir}/usr/bin/$(basename "${link}")"
    ln -s /usr/bin/john "${pkgdir}/usr/lib/john/$(basename "${link}")"
  done

  # data
  install -Dm 644 run/*.chr run/*.lst run/dictionary* run/stats -t "${pkgdir}/usr/share/john"
  install -Dm 644 run/rules/* -t "${pkgdir}/usr/share/john/rules"
}
