# Maintainer: ArchStrike <team@archstrike.org>

buildarch=1

_pkgname="Empire"
pkgname=empire
pkgver=2.3
pkgrel=1
pkgdesc="A pure PowerShell post-exploitation agent."
arch=('any')
groups=('archstrike' 'archstrike-exploit' 'archstrike-backdoors')
url="https://github.com/PowerShellEmpire/Empire"
license=('custom')
install="${pkgname}.install"
depends=('python2-m2crypto' 'swig' 'python2-crypto' 'python2-flask' 'python2-pydispatcher' 'python2-iptools' 'python2-pyopenssl' 'python2-netifaces' 'python2-dropbox' 'pyinstaller' 'python2-macholib' 'python2-zlib_wrapper')
makedepends=('git')
source=("https://github.com/PowerShellEmpire/${_pkgname}/archive/${pkgver}.tar.gz"
        "c1da4a06.patch") # allow new pyOpenSSL, somewhat "better" fix for #697
sha512sums=('0ede63e211b7dfb44c0c049587485f90046b2755699a0a2aa026c1349ef06bb6575ad524c5c9a97f8d01a33c50f5ee978e1d2b44db2822f6d6649f5a5ac7d58e'
            '9f26432c6ace104dbd639e7d15f75366e525de7d4e74c5622180cc9152f81d3121d775ddda0fb2ece448d635079847005181031ae4d9fa5da0c07cf5afd168f0')

prepare(){
  grep -iRl 'python' ${_pkgname}-$pkgver | xargs sed -i 's|#!.*/usr/bin/python|#!/usr/bin/python2|;s|#!.*/usr/bin/env python$|#!/usr/bin/env python2|'
  cd ${_pkgname}-${pkgver}
  sed -i 's|../data/empire.db|/usr/share/empire/data/empire.db|' setup/setup_database.py
  sed -i 's|../data/empire.pem|/usr/share/empire/data/empire.pem|' setup/cert.sh
  patch -p1 -i ../c1da4a06.patch
}

package() {
  cd ${_pkgname}-${pkgver}
  install -dm755 "${pkgdir}/usr/share/${pkgname}"
  install -dm755 "${pkgdir}/usr/bin"
  install -Dm644 LICENSE "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"
  cp -a --no-preserve=ownership * ${pkgdir}/usr/share/${pkgname}/

  # remove kali stuffs
  cd ${pkgdir}/usr/share/${pkgname}/setup
  rm install.sh

cat >"${pkgdir}/usr/bin/${pkgname}" <<EOF
#!/usr/bin/env bash
cd /usr/share/${pkgname}
python2 ${pkgname} "\$@"
EOF
chmod 755 "${pkgdir}/usr/bin/${pkgname}"

cat > "${pkgdir}/usr/bin/${pkgname}-setup" <<EOF
#!/usr/bin/env bash
if [[ -f "/usr/share/empire/data/empire.db" ]]; then
     echo "Empire DB found..."
     read -r -p "Would you like to reset your Empire DB [y/N]" USERINPUT
     case \$USERINPUT in
        [yY] | [eE][sS][yY] )
            cd /usr/share/empire/setup
            ./reset.sh
            exit 1
            ;;
        [nN] | [n|N][O|o] )
            exit 1
            ;;
        * ) echo "Invalid input" && exit 1
            ;;
     esac
fi
echo "DB not found continuing with setup"
cd /usr/share/empire/setup
./setup_database.py
./cert.sh
EOF
chmod 755 "${pkgdir}/usr/bin/empire-setup"
}
